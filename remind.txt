Tổng hop kiến thức môn học: 
ES6
Template Strings ", ' --> `${1+2}`

Let và Const: let a; const b = 10; var
scope: 
- Global(let const, var)
- Local(function let, var, const)
- Block({} let, const)
Hoisting: var
K có Hoisting: let const

Arrow function () => { }, k có Hoisting;
let a = () => {};
function a(){}
var a = function(){}
Generator Functions
function* abc(){
    yield 1;
    yield 2;
    yield 3;
} == > object Generator;
this// bind, apply, call
Default parameters
function a(x=1,y=2){}
a();
...Rest

function a(x, ...arr){

}
a(1,3,4,5); // x = 1 arr = [3,4,5];

Spread
a = [1,3,4];
b = [a] ==> [[1,2,3]]
b = [...a] ==> [1,2,3]
a = []

Destructuring

a = [1,3,4]
x = a[0];
y = a[1];
x = a[2];
let [x, y, z] = a;

let name = "nguyen van B";
let age = 14

obj = {
    name,
    age
}
obj = {
    name: "Nguyen Van A",
    age: 13
}
let {name, age} = obj;
- Classes
class Student {
    constructor(name){
        this.name
    }

    show(){
    }
}
let a = new Student("Nguyen van A");
- Kế thừa
class A extends Student{
    get name(){
    }

    show(){
    }

}

Getters và Setters

Modules : Import & Export
export function a(){}
import {a}

export {a}
import {a}

export default a;
import a;

JS: Đồng bộ
Có các tác vụ sử lý bất đồng bộ: Event, timeout, ajax, ...
Async & Await
callback--> callback hell

Axios --> get API server,  Restfull API( get, put, patch, delete);

Eslint --> convention, logic, problem 

Firebase --> db